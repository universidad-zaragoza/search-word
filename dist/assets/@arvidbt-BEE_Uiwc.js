const a=(o,r)=>r.includes(o.toLowerCase()),u=(o,r)=>{const t=[...r];let e=0;for(let i=0;i<o.length;i++){const s=o[i];if(t.includes(s))t.splice(t.indexOf(s),1),e++;else return!1}return e===o.length},g=(o,r)=>{o.length>r.length&&([o,r]=[r,o]);const t=Array.from({length:o.length+1},(e,i)=>i);for(let e=0;e<r.length;e++){const i=[e+1];for(let s=0;s<o.length;s++)o[s]===r[e]?i.push(t[s]):i.push(1+Math.min(t[s],t[s+1],i[i.length-1]));t.splice(0,t.length,...i)}return t[t.length-1]},l=o=>o.split("").sort((r,t)=>r.localeCompare(t)).join(""),c=o=>Math.floor(Math.random()*o.length),n=(o,r)=>r||o,f=(o,r)=>g(o,r)<=2,d=(o,r,t)=>{if(o.length!==r.length)return!1;for(const e of t)if(o[e]!==r[e])return!1;return!0},y=(o,r,t)=>{if(t.length===0)return!1;let e=0;for(const i of r)t.includes(o.charAt(i))&&e++;return e===r.length},p=(o,r)=>{const t=Math.min(o.length,r.length);let e=0;for(let i=0;i<t;i++){const s=o.charAt(i);r.includes(s)&&(e++,r=r.replace(s,""))}return e},m=(o,r,t)=>{const e=l(o.toLowerCase()),i=[];for(const s of r){if(s.length>e.length)return i;const h=l(s);if(h.length<=e.length&&u(h,e)){if(t&&t!=s.length)continue;i.push(s)}}return i},D=(o,r,t)=>r.filter(e=>e.startsWith(o.toLowerCase())&&e.toLowerCase()!==o.toLowerCase()&&(typeof t>"u"||e.length===t)),C=(o,r,t)=>r.filter(e=>e.endsWith(o.toLowerCase())&&e.toLowerCase()!==o.toLowerCase()&&(typeof t>"u"||e.length===t)),w=(o,r)=>r.filter(t=>t.length===o),L=(o,r)=>o.trim().length==0?[]:r.filter(t=>f(o,t)&&t!=o),W=(o,r)=>{const t=[],e=l(o);for(const i of r)i.length==e.length&&l(i)==e&&i!=o&&t.push(i);return t},A=(o,r)=>{const t=[];for(const e of o)if(e.length>2){const i=e.replace(/[^a-zA-Z0-9:]/g,"").toLowerCase(),s=i.split("").reverse().join("");if(i==s){if(r&&s.length!=r)continue;t.push(s)}}return t},M=(o,r)=>{if(r){const t=o.filter(e=>e.length===r);return t.length===0?`No words of length ${r}`:t[c(t)]}return o[c(o)]},x=(o,r,t)=>{const e=[],i=[],s=[];for(let h=0;h<o.length;h++)o.charAt(h)!=="?"?e.push(h):i.push(h);for(const h of r)d(o,h,e)&&(t?y(h,i,t)&&s.push(h):s.push(h));return s},b=(o,r,t)=>{const e=o.split("?").length-1,i=[];for(const s of r)s.length<=o.length&&p(s,o)+e===s.length&&(t&&s.length===t?i.push(s):t||i.push(s));return i};class j{constructor(r){this.dictionary=r}isWord(r,t){return a(r,n(this.dictionary,t==null?void 0:t.customDictionary))}containing(r,t){return m(r,n(this.dictionary,t==null?void 0:t.customDictionary),t==null?void 0:t.length)}startsWith(r,t){return D(r,n(this.dictionary,t==null?void 0:t.customDictionary),t==null?void 0:t.length)}endsWith(r,t){return C(r,n(this.dictionary,t==null?void 0:t.customDictionary),t==null?void 0:t.length)}ofLength(r,t){return w(r,n(this.dictionary,t==null?void 0:t.customDictionary))}similarTo(r,t){return L(r,n(this.dictionary,t==null?void 0:t.customDictionary))}anagramsOf(r,t){return W(r,n(this.dictionary,t==null?void 0:t.customDictionary))}palindromes(r){return A(n(this.dictionary,r==null?void 0:r.customDictionary),r==null?void 0:r.length)}random(r){return M(n(this.dictionary,r==null?void 0:r.customDictionary),r==null?void 0:r.length)}getDictionaryWords(){return this.dictionary}getPossibleWords(r,t){return x(r,n(this.dictionary,t==null?void 0:t.customDictionary),t==null?void 0:t.allowedCharacters)}getWildcardWords(r,t){return b(r,n(this.dictionary,t==null?void 0:t.customDictionary),t==null?void 0:t.length)}}export{j as W};
