import{r as s,R as f}from"./react-BsEMT7Jt.js";import"./react-dom-BeE_72Gm.js";var h=function(n){var o=n.initValue,e=n.useHookBody,t=n.applyStateChange,a=s.useRef(o);if(typeof e!="function")throw new Error("function expected as hook body parameter. got "+typeof e);var r=e();return s.useLayoutEffect(function(){a.current!==r&&(a.current=r,t(r))},[t,r]),null},p=function(n){console&&console.warn&&console.warn(n)};function l(){return l=Object.assign?Object.assign.bind():function(n){for(var o=1;o<arguments.length;o++){var e=arguments[o];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n},l.apply(this,arguments)}var v=!1,y=[],c=[],m=function(){c.forEach(function(n){return n()})},d=function(n){var o=n.automaticContainerInternalUseOnly,e=s.useState([]),t=e[0],a=e[1],r=s.useRef();return r.current=t,s.useEffect(function(){var i=!0;function u(){if(i){if(c[0]!==u){!o&&v===!0&&p("SingletonHooksContainer is mounted after some singleton hook has been used.Your SingletonHooksContainer will not be used in favor of internal one."),a(function(g){return[]});return}a([].concat(y))}}return c.push(u),m(),function(){i=!1,r.current.length>0&&p("SingletonHooksContainer is unmounted, but it has active singleton hooks. They will be reevaluated once SingletonHooksContainer is mounted again"),c.splice(c.indexOf(u),1),m()}},[o]),f.createElement(f.Fragment,null,t.map(function(i){var u=i.hook,g=i.key;return f.createElement(h,l({},u,{key:g}))}))};export{d as S};
